#@ load("@ytt:data", "data")
#@yaml/text-templated-strings
---
kind: Service
apiVersion: v1
metadata:
  name: (@= data.values.app_name @)-mysql
  namespace: #@ data.values.namespace
spec:
  type: ClusterIP
  ports:
  - port: 3306
  selector:
    app: (@= data.values.app_name @)-mysql

#@ load("@ytt:data", "data")
#@yaml/text-templated-strings
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: (@= data.values.app_name @)-mysql
  namespace: #@ data.values.namespace
spec:
  selector:
    matchLabels:
      app: (@= data.values.app_name @)-mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: (@= data.values.app_name @)-mysql
    spec:
      securityContext:
        runAsUser: 999
        fsGroup: 999
      containers:
      - image: "mariadb@sha256:b3116f425f51353e2ba71b04647977b035c2c578d276e2d4285bd2798e8199ae"
        name: (@= data.values.app_name @)-mysql
        imagePullPolicy: IfNotPresent
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: (@= data.values.app_name @)-mysql
              key: rootpass
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: (@= data.values.app_name @)-mysql
              key: db_name
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: (@= data.values.app_name @)-mysql
              key: db_user
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: (@= data.values.app_name @)-mysql
              key: db_pass
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: (@= data.values.app_name @)-mysql

#@ load("@ytt:data", "data")
#@yaml/text-templated-strings
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: (@= data.values.app_name @)-(@= data.values.namespace @)-mysql
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 30Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: (@= data.values.host_root_path @)/deslabs-legacy/mysql

#@ load("@ytt:data", "data")
#@yaml/text-templated-strings
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: (@= data.values.app_name @)-mysql
  namespace: #@ data.values.namespace
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 30Gi
  volumeName: (@= data.values.app_name @)-(@= data.values.namespace @)-mysql
